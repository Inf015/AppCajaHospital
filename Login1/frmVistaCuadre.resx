<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>